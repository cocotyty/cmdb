// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package v1 generated by go-bindata.// sources:
// pkg/api/v1/service.swagger.json
package v1

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _serviceSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x5f\x73\xdb\xb6\xb2\x7f\xcf\xa7\xd8\x51\xef\xcc\x49\xef\xa8\x72\x93\x73\xe6\xce\xbd\xee\xf4\xc1\x4d\xdc\xc6\x77\x12\xc7\xe3\x38\xe9\x43\x95\xb1\x21\x72\x29\xa1\x21\x01\x1e\x00\x94\xa3\x66\xfc\xdd\xcf\x2c\x00\xfe\x15\xf5\xd7\xb2\x23\xa5\xd4\x43\x26\x26\xc1\xc5\xee\x62\xf7\xf7\x5b\x80\x10\xf4\xe5\x09\x40\x4f\xdf\xb2\xf1\x18\x55\xef\x18\x7a\xcf\x07\x3f\xf6\xfa\x74\x8d\x8b\x48\xf6\x8e\x81\xee\x03\xf4\x0c\x37\x31\xd2\xfd\xf4\xd3\xf8\x88\xa5\xfc\x68\xfa\xec\x48\xa3\x9a\xf2\x00\x07\xa9\x92\x46\xda\x87\x00\x7a\x53\x54\x9a\x4b\x41\x4d\xfd\x7f\x41\x48\x03\x1a\x4d\xef\x09\xc0\x9d\x15\x1d\x48\xa1\xb3\x04\x75\xef\x18\xfe\x70\x4f\xb1\x34\x8d\x79\xc0\x0c\x97\xe2\xe8\x4f\x2d\x05\xb5\xfd\x68\xdb\xa6\x4a\x86\x59\xb0\x66\x5b\x66\x26\xba\xd4\x99\x74\x24\x55\x31\x1c\xa3\x3e\xfa\x12\x29\x99\x0c\xcc\x2c\xc5\x3b\xff\x7f\xc1\x12\xfa\xbf\xc2\xd8\x0a\xbb\x3b\xfa\x62\x64\xde\xc0\x48\x77\xbb\x90\x06\xd0\x1b\xa3\xa9\xfc\x49\x6e\xcb\x92\x84\xa9\x19\xd9\xca\xe2\x18\xe4\xe8\x4f\x0c\xcc\x3f\x34\xd0\x93\x10\x30\x01\x23\x04\x4c\x52\x33\xeb\x27\xc8\x84\x86\x58\xca\x4f\x90\xa5\x40\x8d\xf3\x5e\xf5\x60\x28\x6e\x27\x28\x20\xa0\xab\xa4\x17\x4c\x8c\x49\x41\xe1\xbf\x33\xd4\xa6\x0f\x99\x46\xb8\xb9\xbe\x01\x2e\xb4\x41\x16\x82\x8c\x9c\xcc\x81\xf7\xb8\xd5\x44\xa6\xa8\xac\xb8\xb3\x90\xb4\xb9\xcc\x85\x5f\x9f\x92\xed\xd5\x96\x0a\x75\x2a\x85\x46\x5d\x33\x05\xa0\xf7\xfc\xc7\x1f\x1b\x97\x00\x7a\x21\xea\x40\xf1\xd4\xf8\x11\x3d\x01\x9d\x05\x01\x6a\x1d\x65\x64\x81\x93\x54\x55\xc4\xb9\x25\x98\x60\xc2\xe6\x84\x01\xf4\xfe\x4b\x61\x44\x72\xbe\x3b\x0a\x31\xe2\x82\x5b\x1d\x8f\xa6\xcf\x5e\x73\x6d\x72\x9d\x2f\xbd\xd8\x5e\xed\xe1\xbb\xca\x5f\x77\xd5\xfe\x7a\x21\x46\x2c\x8b\xcd\x6a\xdd\x05\x64\x02\x3f\xa7\x18\x18\x0c\x01\x95\x92\xaa\x30\xe1\xbe\x16\xa8\x4c\x18\x9e\xe0\x29\x09\x5d\xa2\xf7\x93\x16\x0b\x7a\x29\x53\x2c\x41\x83\xaa\x0c\x71\xf7\x69\x98\x43\x41\x45\x3d\x17\x61\xdc\x54\x9a\x5b\x33\x29\x07\x9a\x77\x28\x96\xb8\x42\x0a\x0d\xa3\x32\x6c\xdc\xb5\xb2\x8e\xa1\xa7\x8d\xe2\x62\xdc\x5b\xe4\xe8\x65\xea\xd8\x3f\xf6\x42\x9d\x3c\xad\xf6\x43\x1b\x8f\x27\x7b\xa3\xcc\xfe\x8c\x53\xa0\x90\x19\xbc\xa6\xac\x69\x57\xe8\xdf\x19\xaa\xd9\x12\x8d\x22\x16\xeb\x15\x2a\x35\xee\x46\x52\x25\x8c\x70\xa2\x17\x32\x83\x3f\xd8\xae\x37\xd4\x3a\x4b\xc3\x03\xd4\x3a\xc4\x18\xf7\x4c\xeb\xe2\xff\x1f\x2b\x48\x68\xd8\xb8\x89\x81\x25\x93\x95\x8f\x7f\x7c\x52\x15\xe2\x1d\x50\x90\xbd\x23\xe1\x6b\x52\x4f\x2f\x25\xef\x06\x65\xbe\xb5\xcf\x5d\xd1\x63\xd7\x44\x47\x07\xc1\x99\x15\xa5\x3b\xda\xf4\x9f\x05\x49\xa0\x27\xf2\xf6\xda\x65\x42\xb8\xfb\x2c\x18\x49\x19\x23\x9b\x63\x9d\x32\x0d\xf2\x06\x9b\xc2\xa4\x14\x9a\x6b\x83\xc2\xec\x89\xce\x6b\x27\x6e\x25\x34\x5b\x52\x37\x7f\xb8\x97\x4a\xbd\x7e\x5e\xbe\xb0\xa4\xb1\xf7\x99\x59\xaa\xdc\x25\x63\x7b\x58\x8f\x64\x38\x17\xb5\x2e\xa0\xdb\xee\x2c\xaf\x43\x1e\x68\x7c\x76\x1e\xe8\xd9\xfa\x71\xfe\xde\x96\x19\x5d\x9c\x77\x71\x7e\x0f\x3b\xa7\xcf\x5c\x18\x95\xa3\x74\xe9\x96\x14\x1e\x3e\xe8\x57\x16\x66\x47\x5f\x56\x2f\xae\x2c\xc9\x8f\xdf\x70\xff\xcb\xb3\x2e\x39\x8a\xcf\x82\xe4\x78\xa4\xc9\xe8\xae\x81\xdc\xd5\x90\x6b\xc7\xea\x4b\xd7\xbc\x0b\xd7\x2e\x5c\xcb\xbb\x0f\x1f\xae\x4b\x20\xb8\x36\x2d\x5e\xb3\xfe\x3e\xb0\xda\xbb\x8b\xe1\x7d\xac\x47\x56\x8e\xcd\x86\xb1\xbf\x83\x7a\xfb\xc0\x6a\xed\x2e\xae\xf7\x37\xae\x5d\x20\xed\xbc\xc6\xde\x14\xdc\x17\xbe\xe7\x2c\x5e\x38\xde\xe7\x8d\xe7\xc2\xf7\x8c\x87\x50\x92\xe7\xda\x76\x59\xd4\x9e\x45\xdd\x9b\xc5\x65\xea\x74\x6f\x16\xbb\x37\x8b\xdd\x9b\xc5\xba\xd6\xdf\xea\x9b\xc5\x4d\x26\xfb\x25\x07\x1e\xc8\x54\xbf\xa3\x41\xff\xe9\x68\xb0\xa3\xc1\x8e\x06\x17\x69\xd4\xd1\xe0\xda\x5a\x7f\xf3\x34\xb8\x72\x95\xb0\x24\xc1\x03\x59\x27\xec\x48\xd0\x7f\x3a\x12\xec\x48\xf0\x9b\x25\xc1\xaf\xbb\x2e\xb8\x06\xc6\xec\x04\xa6\x9f\xc0\xb2\xe5\xc0\x3c\x56\x07\xd5\x75\xc1\xfa\xc5\x85\x0b\x84\x83\xca\x4a\x61\x71\xad\x5c\x32\xac\x5e\x9a\x5b\x3b\x5c\xb5\x00\x5f\x52\xc6\x81\x2c\xc1\x77\x94\xe1\x3f\x2b\x40\x71\xb0\x67\xdc\x31\x1f\xeb\x7b\xa6\xd7\x7e\xb1\x49\x33\xcf\xf7\x4f\xab\xfd\x19\xc2\x7d\xd8\xdf\x55\x7e\x6f\x6a\x67\x6f\x9e\xb6\x27\x1b\x4b\x0c\x9b\x6f\xeb\x3a\xb8\x2d\xf7\xdd\x6e\x7b\xff\x59\x54\x05\xee\x0d\x70\x4c\x39\xde\x3e\xd6\xa4\x1c\x45\x96\x34\xfc\x63\xaf\xff\x72\xf2\xee\xec\x45\xa3\x31\x40\xef\xfc\xed\xe5\x9b\x93\xd7\xf3\xd7\x2f\xcf\x5e\xbc\xaa\x0f\xd0\xc7\x7e\x33\x6a\xf2\x70\xf2\xb2\x37\x74\x4a\xab\xe9\x3b\xf3\xca\x86\xca\xa4\x6c\x8c\xd7\x46\x7e\xc2\x05\x04\xf8\x95\x34\xd2\xfc\xaf\x07\x58\xcd\xe1\xc2\xe0\x18\xd5\xe2\xe5\x1c\x2e\xcc\x3f\x9f\x6f\xaa\xf0\x1e\x7e\xb9\x65\x6d\xb2\xd9\x76\x9b\x83\x9b\x83\xfc\xf7\xd1\x2d\x33\xc1\x64\x1b\xca\xf9\xdd\x3e\xf8\xb0\x9c\xf3\x54\x1b\x85\x2c\xe1\x62\x5c\x5c\xd3\xdf\xaf\x0f\xe4\xf9\x08\x38\xa3\xe7\x91\x22\x55\x64\x9b\xe1\x73\x2a\x97\x16\xb5\xb1\x8e\xbf\xbb\x7c\x3f\xcb\xe9\x14\x45\xa3\x9a\x80\x66\x38\x7a\x41\x96\xa7\x36\xeb\xc5\x93\xd1\x3b\xeb\x9e\x16\x4a\x82\x06\x2d\xb5\x76\x5d\x9e\x4a\xe0\xe4\x80\xb3\x17\x64\x04\x4b\xac\xe8\x58\xba\x63\xe9\x8e\xa5\x3b\x96\xee\x58\xfa\xd1\x58\x7a\xdb\xaf\xfb\x1c\xc6\xbe\xc2\x6e\x6f\xae\xfd\xec\x3d\xc9\xec\xcf\xba\xd1\xdf\x8f\xee\x76\x00\x34\xf9\x83\xeb\x7f\x03\xeb\x60\xb6\x64\x75\x08\x62\x3f\x1d\x82\x34\xbc\xf6\x18\xac\x5c\xbe\xf7\xdb\x86\x9f\xcb\xa5\xe2\x7d\xcf\xb1\xee\x8c\xb1\x2e\xe3\x3a\xce\x7e\x64\xce\x6e\x85\xa1\x1c\x70\x36\x3f\xa4\x29\xcf\xdf\x03\x3b\xa6\xa9\xa6\x76\x87\x3d\xfe\x73\x38\xb3\xe4\x35\xd0\xe1\x70\x0f\x6a\xaa\x05\xe7\x4e\x36\x81\x1e\xd4\x61\x4d\x55\xa5\xbb\x94\x6c\x0f\xee\xfd\xd8\x46\xb7\xab\x03\x9b\xd6\x0f\xf8\x35\x77\xb0\x1d\xd4\xa1\x4d\x5d\xbc\xef\x7b\xbc\xd7\xb7\xf5\xec\xf8\xe0\xa6\x55\xc1\xbf\x46\xc1\xb6\xc5\x6a\x6e\x3d\x53\x0e\x61\x4d\xb7\x4b\x93\xd5\x69\xb2\x3f\x73\xb3\x48\xc9\x64\x5f\x5e\x4b\x15\x47\xe1\x7f\x75\x4d\xaa\x61\xb7\x27\x2a\x75\xdf\x4a\x7b\x3c\xad\xbf\x85\x6f\xa5\xed\xe2\x34\xb6\x3a\xf9\x1c\xc8\x1b\x81\x8e\x7f\x3a\xfe\xe9\xf8\xa7\xe3\x9f\x8e\x7f\xf6\x92\x7f\x9e\xc0\x92\x69\x92\x3f\x83\xcb\x9e\xa9\x55\xfd\x7d\xa1\xed\x4e\xd6\x3a\xb8\x55\xee\x6e\x81\xdb\x7f\x36\x26\x8b\xc7\xff\xae\xee\x7e\xe8\xf1\x88\x5f\x80\xdb\x18\x01\x76\x96\xfd\x9b\x6f\x54\x2f\x31\xa0\xdb\xaa\xbe\xa2\x4c\x3e\xf4\xcd\xea\x4b\xec\xe8\x80\xb3\x03\xce\x3d\x00\xce\x35\xb4\x79\xbc\xfd\xea\x3b\x44\xf1\xe2\x47\x29\x2b\x51\x5d\x84\x7f\xcf\xfe\xb4\xe5\x28\x8b\x4e\xc4\xac\x8a\xdc\x0b\xc0\x6e\x11\xc8\xd9\xf6\xd7\x99\x8a\x9b\x68\xbd\xc8\xc4\x6a\x96\x4c\x59\x9c\xe1\x8a\x07\x6b\xb0\x50\x79\x2f\x3c\x33\x95\x2a\xec\xae\x95\xbe\x72\x0b\x7f\xe5\x18\x87\x6f\x98\xfe\x74\x1f\x3b\xeb\x3f\xc0\xd9\x10\xc2\x94\x62\xf5\x18\xe8\x71\x83\xc9\x3c\x1f\xac\x1b\x86\x4d\x9c\xbb\x9a\x20\x68\xb4\x88\x1a\x91\x35\x90\x30\xfd\x09\xac\x4e\x83\x16\x37\x54\xd6\x90\x6a\x62\xec\x03\xc7\x30\xec\x45\x03\x36\xec\x0d\x05\xb5\xa9\x5c\x1b\x0d\x42\xba\x3a\x14\xaf\x50\x21\xdc\x44\x37\xa0\x30\x55\xa8\x51\x18\x0d\xcc\xf7\xcc\x05\x68\x99\x20\x28\x29\x0d\x24\xa8\x35\x1b\x63\x1f\x6e\xd8\x0d\x30\x11\xc2\xcd\xe8\x66\x28\x6c\x43\x4d\x2d\xcd\x04\xf3\x36\x10\xc9\x4c\xd8\xc7\x6f\xa2\x9b\xbe\x6b\x1c\xde\x14\x62\x8b\xbb\x66\x82\x43\x91\x3f\x63\x5b\x0f\x46\x37\x03\xd2\xea\xd7\xc2\x72\x0d\x4c\x21\x64\x1a\x43\x30\x12\x74\x8a\x01\x8f\x66\xc0\x40\x67\xa3\xaa\x97\x34\x98\x09\x33\xa0\x27\x32\x8b\x43\x18\xe1\x50\x28\x34\x99\x12\x18\xc2\x88\x9a\x8f\xa9\x6d\x5e\x98\x80\x54\x90\xc8\x90\x47\xdc\xdf\x16\xe0\x26\xa7\x65\x93\x41\x43\x87\x58\x4b\x98\xb0\x29\x02\x83\x20\xd3\x46\x26\xf0\xff\xef\xde\x9e\x03\x8a\x40\x86\x54\x6c\x3c\xd5\x88\x30\xc2\x58\xde\x7e\x6f\x0d\xf8\x0e\xdc\xe3\x6f\xec\xe3\x5c\xc0\x85\x92\x14\x7d\x94\x98\x74\xff\xf7\x09\x0a\x67\x95\x77\x5d\x20\x85\xc1\xcf\xd6\x20\x06\x69\xd1\xb8\x0f\xac\x60\xb9\xc2\xbd\x52\x0d\x85\xce\x46\x3f\x14\xae\xd3\x10\xf1\xd8\xa0\x72\xe6\x90\xb8\x93\x8b\x33\xf2\x97\x14\xf1\xcc\x8a\x66\xb6\x1b\xa9\x31\x77\x17\xd3\x43\xe1\xbc\xc9\x4b\x25\xc8\xd8\x01\xfc\x2a\x15\xe0\x67\x96\xa4\x31\xf6\x81\x47\xc5\x9d\xbc\x55\xaa\x70\xca\x65\xa6\x87\xc2\xb7\x22\x05\xec\xef\xd9\xba\x41\x6a\xd1\x98\x69\x88\x64\x1c\xcb\x5b\x7d\x4c\xd6\x53\x30\x46\xf0\xc5\xfd\x07\x80\xc1\x31\x3c\x7f\x9e\xff\x35\x2a\x6f\x00\x84\x70\x0c\xcf\xca\x3f\x3f\x53\xcb\xfc\xcf\xbb\xfc\x3f\x33\x6a\xf4\x4f\xf7\x97\xbf\xf8\xd7\x31\xfc\x2f\xf5\x44\xd9\xe4\x4b\x94\x5b\x1e\xc7\xf6\x57\x7c\x73\x7f\x78\xf3\x03\xb0\xe0\x44\x1a\xaa\xdc\x3b\x9f\xfb\x33\x1b\xb6\x7f\x0d\xc5\x53\x33\x41\xae\x5c\x1b\x27\x63\xe4\x12\xd4\x48\xeb\x0d\x5f\xbf\xb8\x30\x97\x09\x37\xc6\xf9\xd3\x42\x12\xd0\x98\x0e\x85\xcc\x4c\x9a\x99\xef\xad\xed\x5b\x5b\x7f\x57\x18\x38\x14\x27\x94\xae\xc8\xa8\x2b\x9f\xaa\xda\x9a\xc6\xc8\xc7\x54\x1e\x7d\x0e\x30\x35\xc0\x8c\x55\x31\x66\xda\x40\x2a\x35\x77\xc1\x1f\x01\x1b\x0a\x8b\x05\xe0\xb0\xc9\x46\xec\x19\x05\x5e\x81\x9f\xfe\x67\x80\x73\xb9\x1e\x1a\xc8\xae\x46\x2e\xf5\x5d\x16\x97\xb9\xe5\x02\x41\xdb\x40\x88\xe3\xdc\xa1\x4f\x99\xa6\x50\xaa\xf5\x10\x55\x1a\x0c\xc5\x84\x51\xde\x62\x31\x2c\x18\xba\x4c\x3a\x97\x06\x5d\x72\xb3\x2a\x20\x86\x12\x9d\x6a\x02\x69\x12\xc0\x14\x8f\x67\xb6\xef\x99\x1f\x98\xa1\x30\x32\xfd\x21\xc6\x29\xc6\x73\xf1\x38\x80\x33\x01\x01\xd3\xe8\xd2\xed\xf2\xf4\xdd\x55\xab\x55\x95\xfe\x72\xb3\x42\xae\x30\x30\x45\x2f\x85\xe8\x3e\x8c\x32\xeb\x9f\xba\xd8\xa1\x88\xb9\x6e\x0a\xce\xb3\xc9\xfd\x14\x72\xc5\x61\xc8\x82\x09\x70\x11\xf2\x29\x0f\x33\x16\xe7\xea\x0e\x85\xcf\xbc\x02\xd3\x14\x6a\x99\xa9\x00\x81\xa4\xb7\x59\xe3\x41\x2a\x41\x33\x91\x61\x7f\x28\xa4\x99\xa0\x82\x4a\x75\x00\x09\x9b\x51\x24\x13\x06\x0d\xe0\xf7\x09\xd1\x40\xa1\x5a\xae\x92\x0f\xf7\xa1\x08\x62\x64\x2a\x9e\x41\x28\x83\x2c\x41\x61\x6c\xa2\x8f\xd1\x0a\xbd\xe5\x66\x02\xdc\x68\x08\x31\x88\x99\x8f\x02\xaf\xf0\xc9\xc5\xd9\x00\xe0\x4c\x0c\x05\x13\x33\xab\xa3\x73\x00\x46\x11\x45\x97\x5c\x60\xd6\x51\xfe\x1f\x4d\x01\x98\x57\x58\x43\x31\xc2\x09\x9b\x72\x4a\x53\xa9\x48\xb6\x6e\xc7\x5a\xb7\xf7\x00\xde\xe6\x4e\xd7\x2e\x65\x2a\xa3\xc9\xe7\x11\x5f\x17\x81\xa7\xe1\x76\xc2\x83\x49\x1e\xba\x32\xf2\xe1\xc4\xd4\x18\x4d\xd5\xf9\xc4\x4c\x63\x49\xf0\x6f\xa4\xf5\xa5\x15\x19\x0e\xe0\xca\x23\x70\x4d\xf9\x02\x8e\x27\x4c\x8c\x9d\xb3\x3d\xf0\xb8\x1e\x4a\x64\x86\x56\x60\x26\x1f\x86\x10\x23\xb1\x10\x5d\xb3\x43\xaa\x21\x13\x46\x66\xc1\x84\xba\xb5\x29\x5c\x68\xc7\x35\xa4\x4c\xe7\x14\x23\x87\xc2\x55\x08\x23\xf7\xb4\xd7\xd5\xab\xd0\x2f\x48\x83\x8f\x85\x54\x14\x8d\x35\xf5\x58\x1c\x17\x5c\xef\x20\x74\x5a\x65\x1b\xcb\x1b\x05\x88\xcc\x43\x53\x69\x0f\x0d\x5c\x0b\xdd\xf6\x41\xe0\x6d\xde\x1f\x45\x1d\x8d\x35\x85\x21\x8a\xd0\x91\x8a\x8d\x9a\xcf\x5c\x1b\x37\xb5\xaf\xf7\xe0\x9c\xe4\x06\xa8\x70\xc0\x00\x0a\xe8\x18\x8a\x36\xad\xec\x68\xe4\x88\xe9\x65\xcc\x43\x25\xdc\x58\xa8\xbc\x99\xc3\xca\x06\x03\xcf\x8d\xd9\x9c\xa8\x62\x8c\x5d\x0c\x3a\x57\x0c\xc5\xbc\x2f\x0c\x15\x07\x85\x43\x0a\xd2\x49\x50\x8d\xad\xf8\xa6\x3b\x2a\x9a\x14\x50\xd1\x74\x86\xad\xaa\xaa\xc4\x3e\xe6\x53\xac\x35\xf5\x12\xda\x08\xba\x4e\x4a\x75\x46\x6e\x23\xe4\xe0\x18\xfe\x78\xf6\xb1\xca\x57\x22\xac\x0c\xfb\x26\x3d\xfd\xd8\x2a\xfc\x79\x55\xb8\x75\x17\x9f\xf3\x2f\xf7\xb5\x86\xaf\x7a\xff\xb0\x65\xef\xb0\xd7\xb7\xf5\x6f\x30\xec\x7d\x2c\x9e\x35\x8d\x22\x61\xb4\xa1\x6a\xcb\xbc\xd0\x87\xe7\x75\x47\x00\x27\xff\x13\x88\x3a\xa4\x24\x1c\x4e\x95\x9c\xf2\x90\x62\xc0\x21\x11\x41\xc5\x14\x95\xa2\x6b\x66\xc2\x75\x5e\x64\x40\x15\x00\xa9\xc4\xf5\x21\x4d\xc0\x50\xd4\xde\x36\x4b\x5d\x98\x52\xa5\x1b\xa2\x22\x79\x44\xe0\x05\x85\xfe\x43\xfb\xd0\x6a\xd6\x30\x15\x17\x66\xda\xd8\x24\xac\x20\x90\xed\x67\xbe\xf4\xf1\xb2\x8a\xea\xd0\xda\x12\x56\x43\xef\x15\x8a\x80\x6a\xc9\x79\x7d\xca\x0a\x41\x56\xc1\xab\x5f\xb8\x84\xe5\xbd\x50\x64\x6b\xc3\x44\x80\x79\x2e\x95\x38\xec\xd5\xaa\x48\xab\x68\xdd\xa7\x72\x3f\x94\x43\xe1\x0a\x99\x5c\xac\x33\x88\x5c\xeb\x50\x31\x74\xe5\x7b\x99\xdf\xb5\x50\xaa\x55\x41\x32\x8f\x64\xe7\xb0\xb6\xda\x67\x28\xda\x8a\x9f\x8a\xc8\x5a\xf5\x03\x13\xa6\x5b\x8a\x9f\xb2\xf4\x29\x2b\x6f\x8d\xde\x03\x6e\x8d\x0b\x70\x2a\xe3\x2c\x87\x0d\xee\x68\x3d\x41\x26\x3c\xee\x15\x93\x23\x84\x20\xe6\xa4\x7c\x51\x38\x7d\x12\xf2\xd6\xba\x8e\x3a\x27\x2e\xc1\x48\x2a\xb4\xb7\x22\x1e\xc7\x1e\x69\x6c\x8a\x58\x16\x43\x5d\xa4\x87\x1f\x3d\x17\x06\x5c\xe5\x43\x64\x19\xc8\x6a\xc1\x89\x97\x6e\x19\x15\x0a\x25\x6b\xd3\x5c\xa6\xa8\xb9\x35\xaa\x29\x0f\xd0\xea\xeb\x39\x92\xe6\x56\x4e\x47\x5b\x3b\xde\xb2\x59\x8e\xaa\x33\x02\xf0\xd2\x79\x36\x3a\xc2\x2c\x20\xec\x63\xc2\xaf\x05\xf2\x88\x54\xb7\xc3\x77\xa2\x5d\x51\x52\x2b\xe9\x3c\xc7\xc5\x32\x60\x55\x40\x2e\x82\xc8\x72\x7e\x49\x92\xba\x85\x25\xa1\x28\xc3\x9c\x37\xf2\x94\x0b\x91\x78\x4a\xfb\x72\xa6\x5a\x0c\x7f\xe2\x22\xb4\xe5\x59\x7b\xf9\xd3\x82\x59\x94\xd5\xae\x62\xf0\x45\xc5\x44\x12\x21\x57\x27\x76\xae\xe8\xf9\x0e\x5e\x48\xa1\x79\x58\x94\x2f\xc4\x27\xaf\xae\xae\x2e\x7c\xdd\xe9\xe6\x3e\xf6\x02\x69\x61\x03\x6e\x9e\x78\x7d\xa9\x93\x69\xd4\xf5\xf8\x2c\xf2\xdf\x0f\xf4\xc5\xc9\xd5\x8b\x57\x45\xcd\x2a\x23\xb8\x78\x7f\x55\x4b\x68\xcd\x0c\xd7\xd1\xcc\xf5\xa8\x31\x61\xc2\xf0\x40\x0f\xc5\x53\x6a\x48\xd2\x1c\xdf\xfa\x92\xd3\x4d\xb6\xb2\x38\xf6\x1a\xe9\x7c\xda\x6c\xa7\xd5\xa7\xf9\xb4\x5a\x46\xd5\xda\xce\x63\x1a\x35\xe9\xcf\x25\xa8\x9d\x8a\x13\x16\x92\x21\x9a\x8b\x71\x8c\x9e\xb2\xe1\xd6\x56\xb7\x6e\xc6\xc3\x14\x0e\x85\xc6\x94\x0a\xd5\x7c\x71\x20\x90\x49\xc2\x06\xae\x27\x0d\x82\x25\x16\xcc\x6c\x31\x4e\x0f\xd9\x3a\x2f\x90\x62\x8a\xca\xb8\x42\xee\x28\x52\x32\x01\x2a\x1c\xd4\x0f\x01\x4b\x30\xa6\x87\xa8\x27\xdb\x4a\xd8\xf1\xc8\x23\x91\x02\x34\xe7\xdc\xc0\x8f\x98\x1b\x76\x3b\x21\xa6\xa7\xca\x38\x2a\x0a\xe8\x72\x9e\x9c\xdf\xbc\x50\x32\xe2\x31\x96\x24\xf4\x5e\xa3\x22\x5f\x2a\xf8\x19\x9e\xfd\x94\x5f\xbd\x98\xd0\xb4\x33\xb5\xff\xfe\x0c\xcf\x7f\xaa\xcd\x8a\x73\x59\xf6\xd1\x42\x90\xf7\x52\xc8\x75\x1a\xb3\xd9\xb5\xb5\xbf\x2a\xd2\xdf\x67\x61\xa8\x50\xeb\xba\x54\x3b\x20\x6e\xaa\xcb\x9a\xc5\xcd\x8d\x57\xf9\xc6\x26\x79\x2c\xa5\xc5\x5b\x9d\x05\x93\xd2\x38\x6a\x5b\x28\x52\xac\x4f\x91\x55\x83\xaa\x3e\xf9\x0a\x56\xa5\x8d\x35\x31\xbf\x7e\x57\x0b\x0d\xf2\xae\x26\x2b\xf2\xd8\x28\xd6\xb6\x5c\x7c\x58\xa0\x2f\x74\x28\xba\xa7\xd6\xcd\xde\xcf\x59\x82\xfd\xf9\xae\xea\x53\x0e\x02\xd1\xb7\x02\xf3\x60\xd5\xcd\x15\x2c\xa3\x90\x99\x0a\x33\x49\x6a\xab\xe1\x4f\x4a\x0a\x46\xda\x8d\xb3\x98\xe5\x6b\x0f\x83\x22\xaf\xfd\x1c\xb4\x19\x26\x73\x91\xf1\xce\x46\xd7\x1b\xff\x57\x61\x8e\xed\x05\x0c\x6a\x73\xed\xfe\x5b\x29\x5f\xfc\x90\xfa\xa1\xfe\xd7\x4f\xe5\x9d\x77\xd9\x28\x97\xa4\xb3\xd1\x75\xde\xc7\xcf\xf0\x7f\x3f\xb5\x2d\x44\x5c\xd5\xf1\x2b\x60\xa2\x5a\x3d\x2d\x18\xde\xea\x88\x5a\x29\x6f\xd5\xaa\x47\x2a\xba\xd4\x9e\x2c\x29\xd2\x9b\x3b\x4b\xd1\x9a\xa5\xe1\xe9\xb0\x57\x1a\x3f\xec\x39\xf0\xe6\xda\xc2\xf0\xf7\xa4\x29\x31\x5d\x0e\x47\x5c\xf8\x25\x91\x1c\x5c\xcb\xf1\x85\x0f\xa8\x88\xb2\x6c\x5e\xe6\x36\x37\x8a\x38\x0b\xae\x33\x3b\x81\x72\x53\x6e\x8f\xab\x13\x8b\x46\xe5\x9a\x87\x55\xaf\x3a\x69\x71\x70\x4f\x64\xe2\x97\x2e\xa7\xd4\x99\x83\x7a\x2e\x82\x38\x0b\x8b\x19\x8b\x55\xcf\x2d\x33\xb9\x09\xb3\x9d\x3d\xdc\x9c\x9d\x7f\x38\x79\x7d\xf6\xf2\xfa\xe4\xf2\xb7\xf7\x6f\x4e\xcf\xaf\x6e\x4a\x3e\x24\x95\x2c\x80\x59\x3a\x4e\x58\x9a\xb2\x51\x5c\xd9\x28\x51\xbe\xcc\xbb\x29\x54\x6c\x2c\x04\xfb\x35\x56\x3d\x4b\x46\x32\xe6\x41\x5d\x95\xa8\x9c\x4f\x1c\xf7\x6a\xeb\xf1\xb5\x17\x6a\xf7\x58\x8a\x6f\x7b\xcd\xb9\xd6\xfb\x06\xe2\x82\x45\xcf\xb5\x9d\x8b\xb3\xf8\x54\x9c\xaa\x54\x1f\x81\xdb\x28\x14\xa2\x61\x3c\xde\xc1\x6b\x85\xf6\x37\x98\xd5\x57\x3c\xed\xaf\x2c\x5b\xdf\x9b\xb4\xbc\x13\xbe\xc7\x68\x8d\x55\x1a\x5c\x3f\x8c\xe7\x27\xc6\xa4\x0f\x24\xfa\x1e\x83\x6a\xb5\xd2\x86\x99\x6c\xe1\xc0\x1e\x5e\x4c\xb4\x9e\x10\x7b\x8f\xa8\xa0\xea\x73\x1b\xef\xcc\xff\xce\xef\x4e\xbd\xd3\x76\x5e\x49\xfb\x1b\x7e\x81\x9f\xcd\x75\xe5\xe4\xb0\x75\x6d\x59\xe9\xdd\xfa\x37\xa9\xef\xf9\x66\xf6\xc1\x1d\xd5\xdc\xc4\xbd\x5e\x1c\xcd\xed\xa7\xbb\x87\x99\x6d\x67\x7c\xec\xd8\xd4\xb6\xe3\xf1\x37\x33\xf4\x50\x06\x75\xd1\xde\xfc\xd5\xd6\xfa\xbc\xb9\xa7\x69\xdb\x40\x82\xdf\xa3\xb1\x05\xd0\x56\xdf\x8d\x6f\xfc\xf8\xf6\x08\x4f\x4f\x6e\xa5\xf1\x14\x95\x5e\xad\xed\x02\xb2\xcb\xb8\x30\xff\xf3\xaf\x05\x85\x51\x65\xef\xf8\x56\xc2\x5b\xf6\x24\x57\xe5\x57\x77\x79\x3f\x84\xfc\x04\x0d\x5b\x38\x14\x2d\xdb\xf6\x7a\x2c\x0c\x6d\xcc\xb3\xf8\x62\xf1\xe6\xbd\x15\xd0\xf7\x06\x0d\xfb\x60\x77\xb0\x6c\x91\x28\x6e\x37\xdc\x3d\xb2\x65\x6f\x88\xb0\x2d\x6d\x17\xc9\xb4\x9b\x3d\xad\xe9\x75\x80\x59\xee\x2b\x72\xf4\x7d\x5c\xf5\x95\x00\xc2\x2e\x0f\x5e\x6f\xe2\x1e\x1b\x4d\x9b\x7a\xe6\x43\x63\x13\xd5\xc6\xee\xd9\x8d\x9e\x1b\x6e\xeb\x5a\xd3\xc0\x4b\x8c\x50\xa1\x08\xee\xcd\x99\x0f\x4e\x2c\x4b\xcd\x78\xd7\x40\xfc\xbd\x0e\xe1\x95\x96\xd4\x58\x6f\xaf\x4d\x69\x92\xee\xa3\x73\x84\x1b\xf8\x2d\xf8\xe1\xaa\x1e\xb3\x87\xe4\xe5\xac\x65\xef\xfe\x63\xf8\x39\xd3\xab\xc9\xea\xab\x15\x0a\xab\x55\x7b\xe8\x1a\xac\xfa\x9d\xb5\x9d\xc9\x5f\x1a\xc3\xf9\x69\x1f\xee\x84\x8f\x7b\xd7\x3a\xeb\xb2\x53\xb3\x70\x69\x29\x44\x93\xfa\x66\xe0\x25\xe2\xe6\xf7\x10\xb7\xc7\x15\x15\x36\xd7\x2b\xea\xf3\xb6\xc3\xae\x96\x1d\x75\xb5\xdc\xbb\x1f\x38\xde\xb6\x39\xb5\x31\x88\xf3\x07\xee\xcd\x1d\xb5\x37\x7f\xc8\x5e\xed\x78\xbd\x8f\x95\xdd\xc4\x6d\x47\xea\x95\x8a\x15\xf3\xe4\x1d\x4c\xe7\xb7\x41\x1f\xfb\x2d\x8a\x8d\xa2\xa4\xac\x2f\x5a\x05\x1a\xb9\x53\x71\x7b\x39\x4d\xf9\x86\xa6\x81\x8f\x09\x71\xf5\xaf\x35\xed\xf9\xfa\x15\x0f\x26\x2b\xd6\xb0\x1e\x69\x42\x57\x5b\x5f\xfa\x0a\xe5\x4d\x1b\x42\xac\xf3\xdc\x3c\x10\x3c\x42\x31\xf5\x37\x2e\x56\xbe\x29\xa4\xa8\x66\xdf\xc1\x30\xe3\x6e\x08\x71\xcf\x02\xbb\xe3\xc1\x9d\x47\xb7\x2b\xf2\xcb\x49\xeb\x0e\xca\xfd\x4d\x08\xa8\xed\x2d\xd4\x83\x15\xfc\x4b\x5d\xd0\xfc\xb1\xd2\x07\xc8\xf4\xf5\xdf\x4f\x7d\x5d\x17\x7c\x85\x38\x68\x7f\x71\xf5\xd8\x6e\x28\x17\x46\xb7\x9a\x98\xbd\xbb\xba\x3c\x3b\xff\xad\x3a\x0f\x3b\x3b\xbf\x3a\xfd\xed\xf4\xb2\x7a\xe9\xe5\xdb\xf7\xbf\xbc\x3e\xad\x5e\xf9\xe5\xed\xdb\xd7\xa7\x27\xe7\x4b\xe7\x6b\x5e\x74\x43\xdf\x46\xf9\xb6\x95\xd2\x67\xe7\x67\x57\x55\x6d\x5e\x5c\x9e\x9e\x5c\xd5\xf4\x7b\x7f\xf1\xb2\x71\xe5\xe5\xe9\xeb\xd3\xab\xd3\xa5\x0a\x5b\xb1\x4f\x72\x27\xdf\x3d\xb9\x7b\xf2\x9f\x00\x00\x00\xff\xff\x17\x6c\x61\x83\xcf\xaf\x00\x00")

func serviceSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_serviceSwaggerJson,
		"service.swagger.json",
	)
}

func serviceSwaggerJson() (*asset, error) {
	bytes, err := serviceSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service.swagger.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"service.swagger.json": serviceSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"service.swagger.json": &bintree{serviceSwaggerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
